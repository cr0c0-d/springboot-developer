# 1. 워크플로의 이름 지정
name : CI/CD

# 2. 워크플로가 시작될 조건 지정 : develop 브랜치에 푸시할 때마다
on :
  push :
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest  # 3. 실행 환경 지정
    # 4. 실행 스텝 지정
    # uses : 지정한 레포지토리 확인, 코드에 대한 작업 실행
    steps:
      - uses: actions/checkout@v3   # checkout 작업을 v3 버전으로 실행

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission for gradlew  # name : 스텝의 이름 지정
        run: chmod +x gradlew   # run : 실행할 명령어

      - name: Build with Gradle
        run: ./gradlew clean build    # gradle로 프로젝트를 빌드 이전 상태로 돌리고 다시 빌드


      # 현재 시간 가져오기
      - name: Get current time
        uses: josStorer/get-current-time@v2.0.2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      # 배포용 패키지 경로 저장
      - name: Set artifact
        run: echo "artifact=$(ls ./build/libs)" >> $GITHUB_ENV    # 빌드 후 생성된 jar파일을 'artifact'라는 환경변수에 값을 넣음

      # 빈스토크 배포
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20  # 빈스토크 배포하는 플러그인
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: springboot-developer
          environment_name: springboot-developer-env
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: ./build/libs/${{env.artifact}}